name: Rainix CI
on: [push]

jobs:
  rainix:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        task: [rainix-rs-test, rainix-rs-artifacts]
        include:
          # Solidity doesn't need to be tested on multiple platforms
          - os: ubuntu-latest
            task: rainix-sol-test
          - os: ubuntu-latest
            task: rainix-sol-static
          - os: ubuntu-latest
            task: rainix-sol-artifacts
          # We don't need to do rust static analysis on multiple platforms
          - os: ubuntu-latest
            task: rainix-rs-static
          # We don't need to do build for wasm32 on multiple platforms
          - os: ubuntu-latest
            task: test-wasm-build
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      DEPLOYMENT_KEY: ${{ github.ref == 'refs/heads/main' && secrets.PRIVATE_KEY || secrets.PRIVATE_KEY_DEV }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          # restore and save a cache using this key
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          # if there's no cache hit, restore a cache by this prefix
          restore-prefixes-first-match: nix-${{ runner.os }}-
          # collect garbage until the Nix store size (in bytes) is at most this number
          # before trying to save a new cache
          # 1G = 1073741824
          gc-max-store-size-linux: 1G

      - run: nix develop -c rainix-sol-prelude
      - run: nix develop -c rainix-rs-prelude
      - run: nix develop -c i9r-prelude
      - name: Run ${{ matrix.task }}
        env:
          ETH_RPC_URL: ${{ secrets.CI_DEPLOY_SEPOLIA_RPC_URL || vars.CI_DEPLOY_SEPOLIA_RPC_URL }}
          ETHERSCAN_API_KEY: ${{ secrets.EXPLORER_VERIFICATION_KEY }}
          DEPLOY_BROADCAST: ''
          DEPLOY_VERIFIER: ''
          DEPLOY_METABOARD_ADDRESS: ${{ vars.CI_DEPLOY_SEPOLIA_METABOARD_ADDRESS }}
          CI_FORK_SEPOLIA_BLOCK_NUMBER: ${{ vars.CI_FORK_SEPOLIA_BLOCK_NUMBER }}
          CI_FORK_SEPOLIA_DEPLOYER_ADDRESS: ${{ vars.CI_FORK_SEPOLIA_DEPLOYER_ADDRESS }}
          CI_DEPLOY_SEPOLIA_RPC_URL: ${{ secrets.CI_DEPLOY_SEPOLIA_RPC_URL || vars.CI_DEPLOY_SEPOLIA_RPC_URL }}
          CI_FORK_POLYGON_RPC_URL: ${{ secrets.CI_FORK_POLYGON_RPC_URL || vars.CI_FORK_POLYGON_RPC_URL }}
        run: nix develop -c ${{ matrix.task }}